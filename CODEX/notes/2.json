{"type":"doc","content":[{"type":"heading","attrs":{"level":1,"class":"pm-align--left"},"content":[{"type":"text","text":"Algoritmos de Ordenación"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"los algoritmos de ordenación son muy importantes, aquí enumero y explico algunos."}]},{"type":"paragraph","attrs":{"class":"pm-align--left"}},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Insert Sort:"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"me lo salto porque no es sencillo ni eficiente tiene una complejidad temporal de O(n²)"}]},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Bubble Sort:"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"es uno de los algoritmo de ordenación más sencillos pero tiene una complejidad temporal de O(n²)"}]},{"type":"code_block","attrs":{"params":"py","collapsed":false},"content":[{"type":"text","text":"#implementación en python del bubble sort\ndef bubble_sort(lista, criterio): #el criterio es 'mayor' o 'menor'\n    n = len(lista)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if lista[j]>lista[j-1]:\n                lista[j], lista[j-1] = lista[j-1], lista[j]\n    return lista"}]},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Quick Sort:"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Quick sort esta entre los algoritmos más eficientes, se basa en la idea de un pivote y tiene una complejidad temporal de O(n*log(n))"}]},{"type":"code_block","attrs":{"params":"py","collapsed":false}},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Heap Sort:"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Heap Sort también está entre los más eficientes con una complejidad de O(n*log(n)), Heap Sort se basa  en la idea de montones que va ordenado poco a poco."}]},{"type":"code_block","attrs":{"params":"py","collapsed":false}},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Radis Sort:"}]},{"type":"code_block","attrs":{"params":"py","collapsed":false}},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"I Can’t believe that this can sort:"}]},{"type":"code_block","attrs":{"params":"py","collapsed":false}},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Gracias por leer"}]}]}